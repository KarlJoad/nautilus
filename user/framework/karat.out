opt -load /home/sgi9754/nautilus-karat/noelle/install/lib/CallGraph.so -load /home/sgi9754/nautilus-karat/noelle/install/lib/libSvf.so -load /home/sgi9754/nautilus-karat/noelle/install/lib/libCudd.so -stat=false -load /home/sgi9754/nautilus-karat/noelle/install/lib/libSCAFUtilities.so -load /home/sgi9754/nautilus-karat/noelle/install/lib/libMemoryAnalysisModules.so -load /home/sgi9754/nautilus-karat/noelle/install/lib/AllocAA.so -load /home/sgi9754/nautilus-karat/noelle/install/lib/TalkDown.so -load /home/sgi9754/nautilus-karat/noelle/install/lib/CallGraph.so -load /home/sgi9754/nautilus-karat/noelle/install/lib/PDGAnalysis.so -load /home/sgi9754/nautilus-karat/noelle/install/lib/Architecture.so -load /home/sgi9754/nautilus-karat/noelle/install/lib/BasicUtilities.so -load /home/sgi9754/nautilus-karat/noelle/install/lib/Task.so -load /home/sgi9754/nautilus-karat/noelle/install/lib/DataFlow.so -load /home/sgi9754/nautilus-karat/noelle/install/lib/HotProfiler.so -load /home/sgi9754/nautilus-karat/noelle/install/lib/LoopStructure.so -load /home/sgi9754/nautilus-karat/noelle/install/lib/Loops.so -load /home/sgi9754/nautilus-karat/noelle/install/lib/Scheduler.so -load /home/sgi9754/nautilus-karat/noelle/install/lib/OutlinerPass.so -load /home/sgi9754/nautilus-karat/noelle/install/lib/Noelle.so -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -load /home/sgi9754/CAT/lib/KARAT.so -karat -target-user -S blob_simplify.ll -o blob_opt.ll
Annotated: _framework_persist_function_signatures
Annotated: _nk_carat_globals_compiler_target
Fetching nk_carat_guard_address ... 
Fetching nk_carat_instrument_global ... 
Fetching nk_carat_instrument_escapes ... 
Fetching nk_carat_instrument_free ... 
Fetching nk_carat_instrument_calloc ... 
Fetching _nk_carat_globals_compiler_target ... 
Fetching nk_carat_instrument_realloc ... 
Fetching nk_carat_guard_callee_stack ... 
Fetching nk_carat_instrument_malloc ... 
Fetching free ... 
Fetching realloc ... 
Fetching calloc ... 
Fetching malloc ... 
Now intrinsics!
llvm.lifetime.start.p0i8
llvm.memset.p0i8.i64
llvm.lifetime.end.p0i8
Vetting calloc ...
Vetting malloc ...
Vetting free ...
Vetting realloc ...
XAN: START ANALYSIS
XAN: Checking   %1 = alloca [500 x i8*], align 16
XAN: END ANALYSIS
XAN: START ANALYSIS
XAN: Checking   %1 = alloca [500 x i8*], align 16
XAN: END ANALYSIS
Found an intrinsic! Instrumenting for now ... 
  call void @llvm.lifetime.start.p0i8(i64 4000, i8* nonnull %4) #9
Found an intrinsic! Instrumenting for now ... 
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 0, i64 4000, i1 false)
Found an intrinsic! Instrumenting for now ... 
  call void @llvm.lifetime.end.p0i8(i64 4000, i8* nonnull %4) #9
GUARDS
   %30 = load i32, i32* %29, align 4, !tbaa !9
   %26 = tail call i8* @realloc(i8* %5, i64 4000) #10
   %22 = load i64, i64* %21, align 8, !tbaa !7
   %5 = tail call noalias i8* @calloc(i64 500, i64 4) #10
   store i8* %13, i8** %14, align 8, !tbaa !3
   %3 = tail call i32 @puts(i8* %2)
   %21 = load i64*, i64** %20, align 16, !tbaa !3
   %10 = tail call i32 (i8*, ...) @printf(i8* %9, i32 %8) #11
   %34 = load i64, i64* %33, align 8, !tbaa !7
   %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !3
   %12 = tail call i32 @fflush(%struct._IO_FILE* %11) #11
   %33 = load i64*, i64** %32, align 8, !tbaa !3
   store i64 %7, i64* %15, align 8, !tbaa !7
   %13 = tail call noalias i8* @malloc(i64 41943) #10
GUARDS: Guard Information
GUARDS: Unoptimized Guards:	7
GUARDS: Redundant Optimized Guards:	0
GUARDS: Loop Invariant Hoisted Guards:	1
GUARDS: Scalar Evolution Combined Guards:	0
GUARDS: Hoisted Call Guards	6
GUARDS: Total Guards:	8
PointerToGuard:   %29 = getelementptr inbounds i32, i32* %19, i64 %28
FTI: nk_carat_guard_address
CallArgs: 
	  %30 = bitcast i32* %29 to i8*
	i32 0
FTI: nk_carat_guard_callee_stack
CallArgs: 
	i64 512
PointerToGuard:   %21 = load i64*, i64** %20, align 16, !tbaa !3
FTI: nk_carat_guard_address
CallArgs: 
	  %22 = bitcast i64* %21 to i8*
	i32 0
FTI: nk_carat_guard_callee_stack
CallArgs: 
	i64 512
PointerToGuard:   %14 = getelementptr inbounds [500 x i8*], [500 x i8*]* %1, i64 0, i64 %7
FTI: nk_carat_guard_address
CallArgs: 
	  %15 = bitcast i8** %14 to i8*
	i32 1
FTI: nk_carat_guard_callee_stack
CallArgs: 
	i64 512
PointerToGuard:   %21 = bitcast [500 x i8*]* %1 to i64**
FTI: nk_carat_guard_address
CallArgs: 
	  %22 = bitcast i64** %21 to i8*
	i32 0
FTI: nk_carat_guard_callee_stack
CallArgs: 
	i64 512
PointerToGuard:   %37 = load i64*, i64** %36, align 8, !tbaa !3
FTI: nk_carat_guard_address
CallArgs: 
	  %38 = bitcast i64* %37 to i8*
	i32 0
PointerToGuard: @stdout = external local_unnamed_addr global %struct._IO_FILE*, align 8
FTI: nk_carat_guard_address
CallArgs: 
	i8* bitcast (%struct._IO_FILE** @stdout to i8*)
	i32 0
FTI: nk_carat_guard_callee_stack
CallArgs: 
	i64 512
PointerToGuard:   %36 = bitcast i8** %35 to i64**
FTI: nk_carat_guard_address
CallArgs: 
	  %37 = bitcast i64** %36 to i8*
	i32 0
PointerToGuard:   %16 = bitcast i8* %13 to i64*
FTI: nk_carat_guard_address
CallArgs: 
	  %17 = bitcast i64* %16 to i8*
	i32 1
FTI: nk_carat_guard_callee_stack
CallArgs: 
	i64 512
XAN: START ANALYSIS
XAN: Checking   %1 = alloca [500 x i8*], align 16
XAN: END ANALYSIS
XAN: START ANALYSIS
XAN: Checking   %1 = alloca [500 x i8*], align 16
XAN: END ANALYSIS
GUARDS
   %2 = tail call i32 @puts(i8* %1)
GUARDS: Guard Information
GUARDS: Unoptimized Guards:	0
GUARDS: Redundant Optimized Guards:	0
GUARDS: Loop Invariant Hoisted Guards:	0
GUARDS: Scalar Evolution Combined Guards:	0
GUARDS: Hoisted Call Guards	1
GUARDS: Total Guards:	0
FTI: nk_carat_guard_callee_stack
CallArgs: 
	i64 512
XAN: START ANALYSIS
XAN: Checking   %1 = alloca [500 x i8*], align 16
XAN: END ANALYSIS
XAN: START ANALYSIS
XAN: Checking   %1 = alloca [500 x i8*], align 16
XAN: END ANALYSIS
GUARDS
GUARDS: Guard Information
GUARDS: Unoptimized Guards:	0
GUARDS: Redundant Optimized Guards:	0
GUARDS: Loop Invariant Hoisted Guards:	0
GUARDS: Scalar Evolution Combined Guards:	0
GUARDS: Hoisted Call Guards	0
GUARDS: Total Guards:	0
XAN: START ANALYSIS
XAN: Checking   %1 = alloca [500 x i8*], align 16
XAN: END ANALYSIS
XAN: START ANALYSIS
XAN: Checking   %1 = alloca [500 x i8*], align 16
XAN: END ANALYSIS
GUARDS
GUARDS: Guard Information
GUARDS: Unoptimized Guards:	0
GUARDS: Redundant Optimized Guards:	0
GUARDS: Loop Invariant Hoisted Guards:	0
GUARDS: Scalar Evolution Combined Guards:	0
GUARDS: Hoisted Call Guards	0
GUARDS: Total Guards:	0
XAN: START ANALYSIS
XAN: Checking   %1 = alloca [500 x i8*], align 16
XAN: END ANALYSIS
XAN: START ANALYSIS
XAN: Checking   %1 = alloca [500 x i8*], align 16
XAN: END ANALYSIS
GUARDS
   %2 = tail call i32 @puts(i8* %1)
GUARDS: Guard Information
GUARDS: Unoptimized Guards:	0
GUARDS: Redundant Optimized Guards:	0
GUARDS: Loop Invariant Hoisted Guards:	0
GUARDS: Scalar Evolution Combined Guards:	0
GUARDS: Hoisted Call Guards	1
GUARDS: Total Guards:	0
FTI: nk_carat_guard_callee_stack
CallArgs: 
	i64 512
Skipping global: @llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer
NextAlloc:   %13 = tail call noalias i8* @malloc(i64 41943) #10
NextAlloc:   %5 = tail call noalias i8* @calloc(i64 500, i64 4) #10
NextAlloc:   %30 = tail call i8* @realloc(i8* %5, i64 4000) #10
NextMemUse:   store i8* %13, i8** %14, align 8, !tbaa !3
